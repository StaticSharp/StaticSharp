<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net7.0</TargetFramework>
		<!--LangVersion>preview</LangVersion-->
		<Nullable>enable</Nullable>
	</PropertyGroup>
	
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<Optimize>false</Optimize>
		<DebugType>full</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>
	
	<ItemGroup>
	  <None Remove="appsettings.json" />
	</ItemGroup>
	
	<!--<ItemGroup>
	  <Content Include="appsettings.json">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </Content>
	</ItemGroup>-->

  <ItemGroup>
    <!--ProjectReference Include="..\StaticSharpServer\StaticSharpSever.csproj" /-->
      <ProjectReference Include="..\StaticSharp\StaticSharp.csproj" />
    </ItemGroup>


	<!--Source generators-->

    <!--Now RoutingSg is referenced via StaticSharp.Core as transitive dependency. 
	But this works for PackageReference and does not work for ProjectReference-->
	<PropertyGroup>
        <RoutingSgDebug>false</RoutingSgDebug>
	</PropertyGroup>
	<ItemGroup Condition="$(RoutingSgDebug)">
		<Compile Include=".generated\RoutingSg.RoutingSg\**" />
	</ItemGroup>
	<ItemGroup Condition="!$(RoutingSgDebug)">
        <ProjectReference Include="..\RoutingSg\Generator\RoutingSg.csproj" OutputItemType="Analyzer" />
	</ItemGroup>


	<PropertyGroup>
		<ComponentSgDebug>false</ComponentSgDebug>
	</PropertyGroup>
	<ItemGroup Condition="$(ComponentSgDebug)">
		<Compile Include=".generated\ComponentSg.ComponentSg\**" />
	</ItemGroup>
	<ItemGroup Condition="!$(ComponentSgDebug)">
		<ProjectReference Include="..\ComponentSg\Generator\ComponentSg.csproj" OutputItemType="Analyzer" />
	</ItemGroup>
	
	
	


	<ItemGroup>
	  <PackageReference Include="Newtonsoft.Json" Version="13.0.2" />
	</ItemGroup>
	
	
</Project>
