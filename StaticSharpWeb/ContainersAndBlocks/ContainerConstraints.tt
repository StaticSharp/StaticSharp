<#@ template language="C#" debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
using System.Collections.Generic;
namespace StaticSharpWeb;
<#
int N = 10;
Func<int,string> GenericArguments = n=>{
    return string.Join(",", Enumerable.Range(0, n).Select(x => "T"+x.ToString()));
};
#>
<# for (int i=1; i<=N; i++) { #>
public interface IContainerConstraints<<#=GenericArguments(i)#>> : IElement { }
<# } #>

public static partial class ContainerStatic {
<# for (int i=1; i<=N; i++) { #>
    public static void Add<Collection, <#=GenericArguments(i)#>>(this Collection collection, IContainerConstraints<<#=GenericArguments(i)#>> item)
        where Collection : IElementContainer, <#=GenericArguments(i)#>
    => collection.AddElement(item);
    public static void Add<Collection, <#=GenericArguments(i)#>>(this Collection collection, IEnumerable<IContainerConstraints<<#=GenericArguments(i)#>>> items)
        where Collection : IElementContainer, <#=GenericArguments(i)#>{
        foreach(var i in items){
            collection.Add(i);
        }
    }
<# } #>
}
